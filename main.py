import os
import logging
from aiogram import Bot, Dispatcher, executor, types
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Text
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.types import ChatActions

import botkeyboards as bk

# Logging
logging.basicConfig(level=logging.INFO)

# Init the bot
token = os.environ['BOT_KEY']
bot = Bot(token=token)
storage = MemoryStorage()  # Memory for FSM
dp = Dispatcher(bot, storage=storage)


# (un)ban form
class BanForm(StatesGroup):
    username = State()


@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    """This handler will be called when user sends `/start` command"""
    if message.chat.type != "private":  # Command has been sent into the group chat. Nothing to do
        return
    await message.reply(
        "<b>–ü—Ä–∏–≤–µ—Ç, —è –±–æ—Ç-–º–æ–¥–µ—Ä–∞—Ç–æ—Ä</b>"
        "\n–ú–æ—è –∑–∞–¥–∞—á–∞ - —Å–ª–µ–¥–∏—Ç—å –∑–∞ —Ç–µ–º, —á—Ç–æ–±—ã –≤ –í–∞—à–µ–º —á–∞—Ç–µ –Ω–µ –ø–æ—è–≤–ª—è–ª–∏—Å—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∏–∑ –±–∞–Ω-–ª–∏—Å—Ç–∞"
        "\n–í–æ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥:"
        "\nüî¥ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å  - –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ß–°"
        "\nüü¢ –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å - –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ß–°"
        "\nüë•Ô∏è –ß–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫  - –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ß–°",
        parse_mode="HTML",
        reply_markup=bk.rk_main
    )


@dp.message_handler(content_types=["new_chat_members"])
async def on_user_join(message: types.Message):
    """This handler will be called when anyone joins the chat"""
    # Ban if in blacklist
    blacklist = [6086502107]
    for user in message.new_chat_members:
        if user.id in blacklist:
            await message.chat.kick(user_id=user.id)


if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
